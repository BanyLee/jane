==================
■ jane更新说明 ■
==================

1.0.0 (2016-11-05) => 2.0.0 (git HEAD) (2018-07-05)

* 编译运行环境升级到Java8,不再推荐32位运行环境
* 增加Mac OS X平台上的开发支持
* 精简优化了Mina库,并合并到jane-core中,更新了最新官方库的修正
* 日志库使用Logback(1.2.x)代替了Log4j2, lib体积更小,性能更高,没有使用Log4j2遇到的一些bugs
* 移除了MapDB,MVStore,以及开发中放弃的limax_edb的数据存储支持, 目前只支持LevelDB(功能及性能均最佳选择,数据库目录名不再加后缀,更新了最新官方库的修正)
* 移除了google的ConcurrentHashMapV8, 改用Java8内置版本
* 移除了google的ConcurrentLinkedHashMap, 所有读cache的实现均使用LRUMap(虽然LRU的自动清理不是很及时,但性能好很多)
* 内置并进一步优化了LongConcurrentHash/LRUMap, LRUMap的自动清理改为后台线程并发执行
* 移除了BeanPool
* 移除了Bean中的toJson和toLua
* 协议头增加serial字段(有符号整数序列化), 可用于自定义Bean的序列号及新增的ask/answer通信机制(支持C#端), 移除了旧的RPC通信支持
* 运行事务的线程类要求是新加的ProcThread类或子类(为了少量优化及便于管理,内置事务线程池已是ProcThread类线程)
* 默认的事务线程池的线程数量不再固定创建,而改为自动调节
* Long表的自增长ID要求至少从1开始分配(0经常用于其它目的,不适合当自增长的key,可以手动访问key=0的字段)
* (Long)Table类增加了lockGet(自动重加锁并检测有修改时自动重做), Procedure类增加了appendLock,lockGet和check等方便开发的辅助方法
* 死锁检测间隔增加常量配置
* 增加DBSimpleManager用于简单非事务性的应用
* NetManager可方便地配置IO线程数量
* NetManager支持同时绑定多个地址
* 网络session可以更安全地关闭(NetManager.closeOnFlush)
* 网络部分的IoBuffer支持DirectByteBuffer及回收池
* 改进了HttpCodec的性能,支持chunked格式的请求数据
* 改进了Octets的hashCode算法
* 增加继承OctetsStream的OctetsStreamEx表示带有异常详细信息的OctetsStream(省了1个数据成员)
* 移除了LuaJ(推荐改用Java自带的Javascript)
* 简化日志输出接口
* 增加了在IDE中调试时的安全停止方法(ExitManager.waitStdInToExit)
* genbeans不再生成bean代码中不需要的Safe类等代码, toJson和toLua方法的生成改为可选
* genbeans可在生成bean代码中附加用户的额外代码
* BeanHandler增加beanStub接口, 不再需要BeanCodec.registerAllBeans; 不再生成AllBeans.getAllBeans
* StatusServer增加LevelDB和DBSimpleManager的一些运行状态
* 增加热更class的工具类,支持热更单个类,多个类,jar包中的所有类
* 增加jar/zip文件的差异和合并工具类
* 增加allbeans.lua格式化工具和vsproj工程自动同步工具
* 大量改进代码细节(接口兼容,不影响原功能,性能和稳定性略有提升)
* test中增加了简单的AIO封装实现(manager&session)
* test中增加了HTTP客户端异步访问
* 改进了LevelDB批量写的性能(使用新的leveldb_write_direct接口)并降低了内存开销
* 更新了LevelDB(支持调整分片大小的配置,提升压缩/解压和CRC32的性能,获取状态接口,修正一些bugs)及LuaJIT
* LevelDB的数据库支持创建在含全角字符的路径里
* LevelDB的数据库支持不使用压缩
* 增加Mac OS X平台运行所需的LevelDB JNI动态库
* gc.log会自动保留一个最近的备份到gc.old.log
* 少量调整src及lib的包/目录结构
* 生成的jane-src.jar只包含jane-core.jar的源码,不包括测试代码
* 生成jane-native.jar打包leveldb的本地库
* C#端的网络部分重构,同时支持.NET Framework 4.0(Windows/Mono), .NET Core 1.0, Mono 2.6(Unity)
* C#端的Bean不再使用struct,改为class
* 更新文档细节(主体大部分内容依然有效)
