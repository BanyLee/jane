// This file is generated by genbeans tool. Do NOT edit it!
using System;
using System.Text;
using System.Collections.Generic;

namespace jane.bean
{
	/**
	 * 测试空bean
	 */
	[Serializable]
	public sealed class TestEmpty : Bean, IComparable<TestEmpty>
	{
		public const int BEAN_TYPE = 4;

		public override void reset()
		{
		}

		/** @param b unused */
		public void assign(TestEmpty b)
		{
		}

		public override int type()
		{
			return 4;
		}

		public override int initSize()
		{
			return 0;
		}

		public override int maxSize()
		{
			return 0;
		}

		public override Bean create()
		{
			return new TestEmpty();
		}

		public override OctetsStream marshal(OctetsStream s)
		{
			return s.marshal1((byte)0);
		}

		public override OctetsStream unmarshal(OctetsStream s)
		{
			for(;;) { int i = s.unmarshalByte() & 0xff, t = i & 3; switch(i >> 2)
			{
				case 0: return s;
				default: s.unmarshalSkipVar(t); break;
			}}
		}

		public override object Clone()
		{
			return new TestEmpty();
		}

		public override int GetHashCode()
		{
			int h = unchecked(4 * (int)0x9e3779b1);
			return h;
		}

		public override bool Equals(object o)
		{
			if(o == this) return true;
			if(!(o is TestEmpty)) return false;
			return true;
		}

		public int CompareTo(TestEmpty b)
		{
			if(b == this) return 0;
			if(b == null) return 1;
			return 0;
		}

		public override int CompareTo(Bean b)
		{
			return b is TestEmpty ? CompareTo((TestEmpty)b) : 1;
		}

		public override string ToString()
		{
			StringBuilder s = new StringBuilder(16 + 0 * 2).Append('{');
			return s.Append('}').ToString();
		}

		public override StringBuilder toJson(StringBuilder s)
		{
			if(s == null) s = new StringBuilder(1024);
			s.Append('{');
			return s.Append('}');
		}

		public override StringBuilder toLua(StringBuilder s)
		{
			if(s == null) s = new StringBuilder(1024);
			s.Append('{');
			return s.Append('}');
		}
	}
}
