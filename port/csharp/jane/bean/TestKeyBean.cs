// This file is generated by genbeans tool. Do NOT edit it!
using System;
using System.Text;
using System.Collections.Generic;

namespace jane.bean
{
	/**
	 * 作为key或配置的bean
	 */
	[Serializable]
	public sealed class TestKeyBean : Bean, IComparable<TestKeyBean>
	{
		public const int BEAN_TYPE = 2;

		private /* 1*/ int key1; // KEY-1
		private /* 2*/ string key2; // KEY-2

		public TestKeyBean()
		{
			key2 = string.Empty;
		}

		public TestKeyBean(int key1, string key2)
		{
			this.key1 = key1;
			this.key2 = key2 ?? string.Empty;
		}

		public override void reset()
		{
			throw new NotSupportedException();
		}

		public int getKey1()
		{
			return key1;
		}

		public string getKey2()
		{
			return key2;
		}

		public override int type()
		{
			return 2;
		}

		public override int initSize()
		{
			return 16;
		}

		public override int maxSize()
		{
			return 16;
		}

		public override Bean create()
		{
			return new TestKeyBean();
		}

		public override OctetsStream marshal(OctetsStream s)
		{
			if(this.key1 != 0) s.marshal1((byte)0x04).marshal(this.key1);
			if(this.key2.Length > 0) s.marshal1((byte)0x09).marshal(this.key2);
			return s.marshal1((byte)0);
		}

		public override OctetsStream unmarshal(OctetsStream s)
		{
			throw new NotSupportedException();
		}

		public override object Clone()
		{
			return new TestKeyBean(key1, key2);
		}

		public override int GetHashCode()
		{
			int h = unchecked(2 * (int)0x9e3779b1);
			h = h * 31 + 1 + this.key1;
			h = h * 31 + 1 + this.key2.GetHashCode();
			return h;
		}

		public override bool Equals(object o)
		{
			if(o == this) return true;
			if(!(o is TestKeyBean)) return false;
			TestKeyBean b = (TestKeyBean)o;
			if(this.key1 != b.key1) return false;
			if(!this.key2.Equals(b.key2)) return false;
			return true;
		}

		public int CompareTo(TestKeyBean b)
		{
			if(b == this) return 0;
			if(b == null) return 1;
			int c;
			c = this.key1 - b.key1; if(c != 0) return c;
			c = this.key2.CompareTo(b.key2); if(c != 0) return c;
			return 0;
		}

		public override int CompareTo(Bean b)
		{
			return b is TestKeyBean ? CompareTo((TestKeyBean)b) : 1;
		}

		public override string ToString()
		{
			StringBuilder s = new StringBuilder(16 + 16 * 2).Append('{');
			s.Append(this.key1).Append(',');
			s.Append(this.key2).Append(',');
			--s.Length;
			return s.Append('}').ToString();
		}

		public override StringBuilder toJson(StringBuilder s)
		{
			if(s == null) s = new StringBuilder(1024);
			s.Append('{');
			s.Append("\"key1\":").Append(this.key1).Append(',');
			Util.toJStr(s.Append("\"key2\":"), this.key2).Append(',');
			--s.Length;
			return s.Append('}');
		}

		public override StringBuilder toLua(StringBuilder s)
		{
			if(s == null) s = new StringBuilder(1024);
			s.Append('{');
			s.Append("key1=").Append(this.key1).Append(',');
			Util.toJStr(s.Append("key2="), this.key2).Append(',');
			--s.Length;
			return s.Append('}');
		}
	}
}
