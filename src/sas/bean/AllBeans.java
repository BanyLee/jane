// This file is generated by genbeans tool. Do NOT edit it! @formatter:off
package sas.bean;

import java.util.ArrayList;
import java.util.List;
import sas.core.Bean;
import sas.core.BeanCodec;
import sas.core.BeanHandler;
import sas.core.IntMap;

/** 全部beans的注册(自动生成的静态类) */
public final class AllBeans
{
	private AllBeans() {}

	/** 注册全部的beans到网络管理器. 必须在网络连接之前调用 */
	public static void register()
	{
		List<Bean<?>> r = new ArrayList<>(6);
		r.add(new TestBean());
		r.add(new TestKeyBean());
		r.add(new TestType());
		r.add(new TestEmpty());
		r.add(new TestRPCBean());
		r.add(new TestRPCBean2());
		BeanCodec.instance().registerAllBeans(r);
	}

	public static IntMap<BeanHandler<?>> getTestServerHandlers()
	{
		IntMap<BeanHandler<?>> r = new IntMap<>(4 * 4);
		r.put(1, new sas.handler.testserver.TestBeanHandler());
		r.put(3, new sas.handler.testserver.TestTypeHandler());
		r.put(4, new sas.handler.testserver.TestEmptyHandler());
		r.put(5, new sas.handler.testserver.TestRPCBeanHandler());
		return r;
	}

	public static IntMap<BeanHandler<?>> getTestClientHandlers()
	{
		IntMap<BeanHandler<?>> r = new IntMap<>(4 * 4);
		r.put(1, new sas.handler.testclient.TestBeanHandler());
		r.put(3, new sas.handler.testclient.TestTypeHandler());
		r.put(4, new sas.handler.testclient.TestEmptyHandler());
		r.put(5, new sas.handler.testclient.TestRPCBeanHandler());
		return r;
	}
}
